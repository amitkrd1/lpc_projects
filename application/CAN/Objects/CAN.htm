<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Objects\CAN.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Objects\CAN.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060061: Last Updated: Tue Dec 20 18:27:17 2016
<BR><P>
<H3>Maximum Stack Usage =        112 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
__rt_entry_main &rArr; main &rArr; Board_Init &rArr; Board_Debug_Init &rArr; Chip_UART_SetBaud &rArr; Chip_Clock_GetUARTBaseClockRate &rArr; __aeabi_uldivmod
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[54]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[5]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[5]">NMI_Handler</a><BR>
 <LI><a href="#[6]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[6]">HardFault_Handler</a><BR>
 <LI><a href="#[7]">SVC_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[7]">SVC_Handler</a><BR>
 <LI><a href="#[8]">PendSV_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[8]">PendSV_Handler</a><BR>
 <LI><a href="#[32]">ACMP0_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[32]">ACMP0_IRQHandler</a><BR>
 <LI><a href="#[4d]">_sys_exit</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[4d]">_sys_exit</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[32]">ACMP0_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[33]">ACMP1_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[34]">ACMP2_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[35]">ACMP3_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[29]">ADC0A_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[2a]">ADC0B_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[2c]">ADC0_OVR_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[2b]">ADC0_THCMP_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[2d]">ADC1A_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[2e]">ADC1B_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[30]">ADC1_OVR_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[2f]">ADC1_THCMP_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[b]">BOD_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[25]">CAN_IRQHandler</a> from can.o(i.CAN_IRQHandler) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[3d]">CAN_error</a> from can.o(i.CAN_error) referenced from can.o(.data)
 <LI><a href="#[3b]">CAN_rx</a> from can.o(i.CAN_rx) referenced from can.o(.data)
 <LI><a href="#[3c]">CAN_tx</a> from can.o(i.CAN_tx) referenced from can.o(.data)
 <LI><a href="#[31]">DAC_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[e]">DMA_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[d]">EEPROM_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[c]">FMC_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[f]">GINT0_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[10]">GINT1_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[6]">HardFault_Handler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[22]">I2C0_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[1e]">MRT_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[5]">NMI_Handler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[11]">PIN_INT0_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[12]">PIN_INT1_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[13]">PIN_INT2_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[14]">PIN_INT3_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[15]">PIN_INT4_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[16]">PIN_INT5_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[17]">PIN_INT6_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[18]">PIN_INT7_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[8]">PendSV_Handler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[36]">QEI_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[19]">RIT_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[37]">RTC_ALARM_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[38]">RTC_WAKE_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[4]">Reset_Handler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[1a]">SCT0_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[1b]">SCT1_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[1c]">SCT2_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[1d]">SCT3_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[23]">SPI0_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[24]">SPI1_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[7]">SVC_Handler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[9]">SysTick_Handler</a> from main.o(i.SysTick_Handler) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[39]">SystemInit</a> from sysinit.o(i.SystemInit) referenced from keil_startup_lpc15xx.o(.text)
 <LI><a href="#[1f]">UART0_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[20]">UART1_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[21]">UART2_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[28]">USBWakeup_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[27]">USB_FIQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[26]">USB_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[a]">WDT_IRQHandler</a> from keil_startup_lpc15xx.o(.text) referenced from keil_startup_lpc15xx.o(RESET)
 <LI><a href="#[3e]">__main</a> from __main.o(!!!main) referenced from keil_startup_lpc15xx.o(.text)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[3e]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3f]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[41]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[7a]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[7b]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[42]"></a>__scatterload_copy</STRONG> (Thumb, 26 bytes, Stack size unknown bytes, __scatter_copy.o(!!handler_copy), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_copy
</UL>

<P><STRONG><a name="[7c]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[46]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[7d]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[7e]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[7f]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[80]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[81]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[82]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[83]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000002))

<P><STRONG><a name="[84]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[85]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[86]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[87]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[88]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[89]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[8a]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[8b]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[8c]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[8d]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[8e]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[8f]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[90]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[91]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[4b]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[92]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[93]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[94]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[95]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[96]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[97]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[98]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[40]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[99]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[43]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[45]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[9a]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[47]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; Board_Init &rArr; Board_Debug_Init &rArr; Chip_UART_SetBaud &rArr; Chip_Clock_GetUARTBaseClockRate &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[9b]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[4f]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[4a]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[9c]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[4c]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[4]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[5]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>Reserved_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Reserved_IRQHandler
</UL>

<P><STRONG><a name="[32]"></a>ACMP0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP0_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP0_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>ACMP1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>ACMP2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>ACMP3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>ADC0A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>ADC0B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>ADC0_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>ADC0_THCMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>ADC1A_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>ADC1B_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>ADC1_OVR_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>ADC1_THCMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>BOD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EEPROM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>GINT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>GINT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>I2C0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>MRT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>PIN_INT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>PIN_INT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>PIN_INT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>PIN_INT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>PIN_INT4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>PIN_INT5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>PIN_INT6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>PIN_INT7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>QEI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>RIT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>RTC_ALARM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>RTC_WAKE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>SCT0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SCT1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SCT2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>SCT3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[23]"></a>SPI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>UART0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>UART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>UART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>USBWakeup_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>USB_FIQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[26]"></a>USB_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>WDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, keil_startup_lpc15xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, keil_startup_lpc15xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_uldivmod</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, lludivv7m.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetUARTBaseClockRate
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetUARTBaseClockRate
</UL>

<P><STRONG><a name="[9d]"></a>_ll_udiv</STRONG> (Thumb, 238 bytes, Stack size 48 bytes, lludivv7m.o(.text), UNUSED)

<P><STRONG><a name="[9e]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[9f]"></a>__rt_heap_escrow$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[a0]"></a>__rt_heap_expand$2region</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[49]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[a1]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[53]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[a2]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[50]"></a>Board_SystemInit</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, board_sysinit.o(i.Board_SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Board_SystemInit &rArr; Board_SetupMuxing &rArr; Chip_IOCON_SetPinMuxing
</UL>
<BR>[Calls]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupMuxing
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupClocking
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[75]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_init
</UL>

<P><STRONG><a name="[a3]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[a4]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[a5]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[44]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[55]"></a>Board_Debug_Init</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, board.o(i.Board_Debug_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = Board_Debug_Init &rArr; Chip_UART_SetBaud &rArr; Chip_Clock_GetUARTBaseClockRate &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_SetBaud
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_Init
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetUARTBaseClockRate
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SWM_MovablePortPinAssign
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[5b]"></a>Board_Init</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, board.o(i.Board_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = Board_Init &rArr; Board_Debug_Init &rArr; Chip_UART_SetBaud &rArr; Chip_Clock_GetUARTBaseClockRate &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_Init
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Debug_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[78]"></a>Board_LED_Set</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, board.o(i.Board_LED_Set))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Board_LED_Set
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[64]"></a>Board_LED_Toggle</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, board.o(i.Board_LED_Toggle))
<BR><BR>[Called By]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_tx
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CAN_rx
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[52]"></a>Board_SetupClocking</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, board_sysinit.o(i.Board_SetupClocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Board_SetupClocking &rArr; Chip_SetupXtalClocking
</UL>
<BR>[Calls]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_PowerUp
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SystemInit
</UL>

<P><STRONG><a name="[51]"></a>Board_SetupMuxing</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, board_sysinit.o(i.Board_SetupMuxing))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Board_SetupMuxing &rArr; Chip_IOCON_SetPinMuxing
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_IOCON_SetPinMuxing
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_DeassertPeriphReset
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_AssertPeriphReset
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SWM_MovablePinAssign
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_EnablePeriphClock
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SystemInit
</UL>

<P><STRONG><a name="[25]"></a>CAN_IRQHandler</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, can.o(i.CAN_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>Chip_Clock_EnablePeriphClock</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, clock_15xx.o(i.Chip_Clock_EnablePeriphClock))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupMuxing
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_init
</UL>

<P><STRONG><a name="[57]"></a>Chip_Clock_GetMainClockRate</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, clock_15xx.o(i.Chip_Clock_GetMainClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetMain_B_ClockRate &rArr; Chip_Clock_GetSystemPLLOutClockRate
</UL>
<BR>[Calls]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMain_B_ClockRate
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMain_A_ClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetUARTBaseClockRate
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Debug_Init
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetUARTBaseClockRate
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemClockRate
</UL>

<P><STRONG><a name="[66]"></a>Chip_Clock_GetMain_A_ClockRate</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, clock_15xx.o(i.Chip_Clock_GetMain_A_ClockRate))
<BR><BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMain_B_ClockRate
</UL>

<P><STRONG><a name="[65]"></a>Chip_Clock_GetMain_B_ClockRate</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, clock_15xx.o(i.Chip_Clock_GetMain_B_ClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_Clock_GetMain_B_ClockRate &rArr; Chip_Clock_GetSystemPLLOutClockRate
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLInClockRate
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMain_A_ClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>

<P><STRONG><a name="[69]"></a>Chip_Clock_GetSystemClockRate</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, clock_15xx.o(i.Chip_Clock_GetSystemClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_Clock_GetSystemClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetMain_B_ClockRate &rArr; Chip_Clock_GetSystemPLLOutClockRate
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
</UL>

<P><STRONG><a name="[67]"></a>Chip_Clock_GetSystemPLLInClockRate</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, clock_15xx.o(i.Chip_Clock_GetSystemPLLInClockRate))
<BR><BR>[Calls]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetPLLInClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMain_B_ClockRate
</UL>

<P><STRONG><a name="[68]"></a>Chip_Clock_GetSystemPLLOutClockRate</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, clock_15xx.o(i.Chip_Clock_GetSystemPLLOutClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_Clock_GetSystemPLLOutClockRate
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLInClockRate
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetPLLFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMain_B_ClockRate
</UL>

<P><STRONG><a name="[6c]"></a>Chip_Clock_GetUARTBaseClockRate</STRONG> (Thumb, 60 bytes, Stack size 16 bytes, clock_15xx.o(i.Chip_Clock_GetUARTBaseClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = Chip_Clock_GetUARTBaseClockRate &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_SetBaud
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetUARTBaseClockRate
</UL>

<P><STRONG><a name="[71]"></a>Chip_Clock_SetMainClockSource</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, clock_15xx.o(i.Chip_Clock_SetMainClockSource))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>

<P><STRONG><a name="[58]"></a>Chip_Clock_SetUARTBaseClockRate</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, clock_15xx.o(i.Chip_Clock_SetUARTBaseClockRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Chip_Clock_SetUARTBaseClockRate &rArr; Chip_Clock_GetUARTBaseClockRate &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetMainClockRate
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetUARTBaseClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Debug_Init
</UL>

<P><STRONG><a name="[5c]"></a>Chip_GPIO_Init</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, gpio_15xx.o(i.Chip_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_DeassertPeriphReset
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_AssertPeriphReset
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_EnablePeriphClock
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>

<P><STRONG><a name="[62]"></a>Chip_IOCON_SetPinMuxing</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, iocon_15xx.o(i.Chip_IOCON_SetPinMuxing))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_IOCON_SetPinMuxing
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupMuxing
</UL>

<P><STRONG><a name="[63]"></a>Chip_SWM_MovablePinAssign</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, swm_15xx.o(i.Chip_SWM_MovablePinAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_SWM_MovablePinAssign
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupMuxing
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SWM_MovablePortPinAssign
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_init
</UL>

<P><STRONG><a name="[60]"></a>Chip_SYSCTL_AssertPeriphReset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sysctl_15xx.o(i.Chip_SYSCTL_AssertPeriphReset))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupMuxing
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_PeriphReset
</UL>

<P><STRONG><a name="[61]"></a>Chip_SYSCTL_DeassertPeriphReset</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, sysctl_15xx.o(i.Chip_SYSCTL_DeassertPeriphReset))
<BR><BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupMuxing
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_GPIO_Init
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_init
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_PeriphReset
</UL>

<P><STRONG><a name="[6f]"></a>Chip_SYSCTL_PowerDown</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sysctl_15xx.o(i.Chip_SYSCTL_PowerDown))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>

<P><STRONG><a name="[5e]"></a>Chip_SYSCTL_PowerUp</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, sysctl_15xx.o(i.Chip_SYSCTL_PowerUp))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupClocking
</UL>

<P><STRONG><a name="[5d]"></a>Chip_SetupXtalClocking</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, sysinit_15xx.o(i.Chip_SetupXtalClocking))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_SetupXtalClocking
</UL>
<BR>[Calls]<UL><LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_PowerUp
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_FMC_SetFLASHAccess
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_SetMainClockSource
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_PowerDown
</UL>
<BR>[Called By]<UL><LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SetupClocking
</UL>

<P><STRONG><a name="[59]"></a>Chip_UART_Init</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, uart_15xx.o(i.Chip_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Chip_UART_Init &rArr; Chip_SYSCTL_PeriphReset
</UL>
<BR>[Calls]<UL><LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_EnablePeriphClock
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getUARTClockID
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_PeriphReset
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Debug_Init
</UL>

<P><STRONG><a name="[5a]"></a>Chip_UART_SetBaud</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, uart_15xx.o(i.Chip_UART_SetBaud))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Chip_UART_SetBaud &rArr; Chip_Clock_GetUARTBaseClockRate &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetUARTBaseClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Debug_Init
</UL>

<P><STRONG><a name="[9]"></a>SysTick_Handler</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, main.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>SystemCoreClockUpdate</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, chip_15xx.o(i.SystemCoreClockUpdate))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = SystemCoreClockUpdate &rArr; Chip_Clock_GetSystemClockRate &rArr; Chip_Clock_GetMainClockRate &rArr; Chip_Clock_GetMain_B_ClockRate &rArr; Chip_Clock_GetSystemPLLOutClockRate
</UL>
<BR>[Calls]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemClockRate
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[39]"></a>SystemInit</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, sysinit.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = SystemInit &rArr; Board_SystemInit &rArr; Board_SetupMuxing &rArr; Chip_IOCON_SetPinMuxing
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_SystemInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> keil_startup_lpc15xx.o(.text)
</UL>
<P><STRONG><a name="[4d]"></a>_sys_exit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, board.o(i._sys_exit))
<BR><BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
</UL>

<P><STRONG><a name="[74]"></a>can_init</STRONG> (Thumb, 282 bytes, Stack size 48 bytes, can.o(i.can_init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = can_init &rArr; Chip_SWM_MovablePinAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_DeassertPeriphReset
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_AssertPeriphReset
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SWM_MovablePinAssign
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_EnablePeriphClock
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_speed
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_IOCON_PinMuxSet
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[77]"></a>can_speed</STRONG> (Thumb, 84 bytes, Stack size 0 bytes, can.o(i.can_speed))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_init
</UL>

<P><STRONG><a name="[79]"></a>can_transmit</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, can.o(i.can_transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = can_transmit
</UL>
<BR>[Called By]<UL><LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[48]"></a>main</STRONG> (Thumb, 266 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = main &rArr; Board_Init &rArr; Board_Debug_Init &rArr; Chip_UART_SetBaud &rArr; Chip_Clock_GetUARTBaseClockRate &rArr; __aeabi_uldivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_transmit
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemCoreClockUpdate
<LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_LED_Toggle
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_LED_Set
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[3d]"></a>CAN_error</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, can.o(i.CAN_error))
<BR>[Address Reference Count : 1]<UL><LI> can.o(.data)
</UL>
<P><STRONG><a name="[3b]"></a>CAN_rx</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, can.o(i.CAN_rx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_rx
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_LED_Toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can.o(.data)
</UL>
<P><STRONG><a name="[3c]"></a>CAN_tx</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, can.o(i.CAN_tx))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = CAN_tx
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_LED_Toggle
</UL>
<BR>[Address Reference Count : 1]<UL><LI> can.o(.data)
</UL>
<P><STRONG><a name="[76]"></a>Chip_IOCON_PinMuxSet</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, can.o(i.Chip_IOCON_PinMuxSet))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_IOCON_PinMuxSet
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;can_init
</UL>

<P><STRONG><a name="[56]"></a>Chip_SWM_MovablePortPinAssign</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, board.o(i.Chip_SWM_MovablePortPinAssign))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_SWM_MovablePortPinAssign &rArr; Chip_SWM_MovablePinAssign
</UL>
<BR>[Calls]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SWM_MovablePinAssign
</UL>
<BR>[Called By]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Board_Debug_Init
</UL>

<P><STRONG><a name="[6b]"></a>Chip_Clock_GetPLLFreq</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, clock_15xx.o(i.Chip_Clock_GetPLLFreq))
<BR><BR>[Called By]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLOutClockRate
</UL>

<P><STRONG><a name="[6a]"></a>Chip_Clock_GetPLLInClockRate</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, clock_15xx.o(i.Chip_Clock_GetPLLInClockRate))
<BR><BR>[Called By]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_Clock_GetSystemPLLInClockRate
</UL>

<P><STRONG><a name="[70]"></a>Chip_FMC_SetFLASHAccess</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, sysinit_15xx.o(i.Chip_FMC_SetFLASHAccess))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SetupXtalClocking
</UL>

<P><STRONG><a name="[6e]"></a>Chip_SYSCTL_PeriphReset</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, uart_15xx.o(i.Chip_SYSCTL_PeriphReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Chip_SYSCTL_PeriphReset
</UL>
<BR>[Calls]<UL><LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_DeassertPeriphReset
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_SYSCTL_AssertPeriphReset
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_Init
</UL>

<P><STRONG><a name="[72]"></a>getUARTClockID</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, uart_15xx.o(i.getUARTClockID))
<BR><BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Chip_UART_Init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
